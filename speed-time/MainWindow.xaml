<potato:DSWindow x:Class="DSaladin.SpeedTime.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:potato="https://dsaladin.dev/products/fancypotato/wpf/xaml"
                 xmlns:converter="clr-namespace:DSaladin.SpeedTime.Converter"
                 xmlns:viewmodel="clr-namespace:DSaladin.SpeedTime.ViewModel"
                 xmlns:language="clr-namespace:DSaladin.SpeedTime.Language"
                 xmlns:fa="https://dsaladin.dev/products/fontawesome/wpf/xaml"
                 xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
                 xmlns:local="clr-namespace:DSaladin.SpeedTime"
                 xmlns:model="clr-namespace:DSaladin.SpeedTime.Model"
                 xmlns:integration="clr-namespace:DSaladin.SpeedTime.Integrations"
                 mc:Ignorable="d"
                 d:DataContext="{d:DesignInstance viewmodel:MainWindowViewModel}"
                 Background="{DynamicResource BackgroundDefault}"
                 Title="Speed Time" Height="650" Width="500" MinWidth="500" MinHeight="400">
    <potato:DSWindow.Resources>
        <converter:DateTimeConverter x:Key="DateTimeConverter" />
        <potato:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

        <Style x:Key="DefaultTimeLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource DefaultLabel}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsBreak}" Value="True">
                    <Setter Property="FontStyle" Value="Italic" />
                    <Setter Property="Foreground" Value="{DynamicResource ForegroundA}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsGapItem}" Value="True">
                    <Setter Property="FontStyle" Value="Italic" />
                    <Setter Property="Foreground" Value="{DynamicResource ForegroundA}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </potato:DSWindow.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
            <RowDefinition Height="45" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Margin="10,5,10,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="65" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="{Binding CurrentTime.Title, TargetNullValue=''}" Style="{DynamicResource DefaultTextBlock}"
                       d:Text="Searching bugs" FontSize="18" FontWeight="Bold" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"
                       Padding="4,4,4,4" />
            <Label Grid.Column="1" Content="{Binding CurrentTime.Hours, TargetNullValue=''}" ContentStringFormat=" {0:N2}h"
                   d:Content="1.25" Style="{DynamicResource Title4Label}" HorizontalAlignment="Right" />
        </Grid>
        <Line X1='0' X2='{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}'
              Y1='50' Y2='50' Stroke="{DynamicResource BackgroundC}" StrokeThickness='3' />
        <Grid Grid.Row="1" Margin="0,5,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="5,0,0,0">
                <potato:DSButton fa:Content.Icon="SolidAnglesLeft" Style="{DynamicResource TransparentAccentButton}" Width="30" Padding="0,0,0,0"
                                 Command="{Binding ChangeCurrentDateTimeCommand}" CommandParameter="-7" />
                <potato:DSButton fa:Content.Icon="SolidAngleLeft" Style="{DynamicResource TransparentAccentButton}" Width="30" Padding="0,0,0,0"
                                 Command="{Binding ChangeCurrentDateTimeCommand}" CommandParameter="-1" />
                <Label Content="{Binding CurrentDateTimeFormat}" d:Content="01. Jan 2023"
                       Width="100" HorizontalContentAlignment="Center">
                    <Label.InputBindings>
                        <MouseBinding Gesture="LeftDoubleClick" Command="{Binding CurrentDateTimeDoubleClickCommand}" />
                    </Label.InputBindings>
                </Label>
                <potato:DSButton fa:Content.Icon="SolidAngleRight" Style="{DynamicResource TransparentAccentButton}" Width="30" Padding="0,0,0,0"
                                 Command="{Binding ChangeCurrentDateTimeCommand}" CommandParameter="1" />
                <potato:DSButton fa:Content.Icon="SolidAnglesRight" Style="{DynamicResource TransparentAccentButton}" Width="30" Padding="0,0,0,0"
                                 Command="{Binding ChangeCurrentDateTimeCommand}" CommandParameter="7" />
            </StackPanel>
            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,3,5,3">
                <potato:DSButton Grid.Column="2" fa:Content.Icon="BrandsAtlassian" FontSize="20" Padding="0,0,0,0" Margin="5,0,0,0"
                                 Style="{DynamicResource TransparentAccentButton}" Command="{Binding UpdateJiraCommand}" Width="30"
                                 Visibility="{Binding Source={x:Static model:SettingsModel.Instance}, Path=JiraIsEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                                 IsLoading="{Binding IsJiraLoading}" />
                <potato:DSButton Grid.Column="2" fa:Content.Icon="SolidPlus" FontSize="20" Padding="0,0,0,0" Margin="5,0,0,0" Style="{DynamicResource TransparentAccentButton}"
                        Command="{Binding AddTrackingCommand}" Width="30" />
                <potato:DSButton Grid.Column="2" fa:Content.Icon="SolidStop" FontSize="20" Padding="0,0,0,0" Margin="5,0,0,0" Style="{DynamicResource TransparentAccentButton}"
                        Command="{Binding StopCurrentTrackingCommand}" Width="30" IsEnabled="{Binding IsCurrentlyTracking}" />
            </StackPanel>
        </Grid>
        <ListView x:Name="lst_times" Grid.Row="2" Margin="5,5,5,0" ItemsSource="{Binding TrackedTimesViewSource.View}"
                  ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListView.ItemTemplate>
                <DataTemplate DataType="{x:Type model:TrackTime}">
                    <Grid x:Name="grdTime" Margin="9,0,5,0" HorizontalAlignment="Stretch" Background="Transparent">
                        <Grid.InputBindings>
                            <MouseBinding Gesture="LeftDoubleClick"
                                          Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type potato:DSWindow}}, Path=DataContext.TrackTimeDoubleClickCommand}"
                                          CommandParameter="{Binding ElementName=lst_times, Path=SelectedItem}" />
                        </Grid.InputBindings>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition Width="60" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" Background="#00FFFFFF">
                            <Grid VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Title}" VerticalAlignment="Center" TextTrimming="CharacterEllipsis">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource DefaultTextBlock}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsBreak}" Value="True">
                                                    <Setter Property="FontStyle" Value="Italic" />
                                                    <Setter Property="Foreground" Value="{DynamicResource ForegroundA}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=IsGapItem}" Value="True">
                                                    <Setter Property="FontStyle" Value="Italic" />
                                                    <Setter Property="Foreground" Value="{DynamicResource ForegroundA}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <Label Grid.Column="1" Width="30" Padding="5,0,5,0">
                                    <Label.Style>
                                        <Style TargetType="Label" BasedOn="{StaticResource DefaultTimeLabel}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsBreak}" Value="True">
                                                    <Setter Property="fa:Content.Icon" Value="SolidMugHot" />
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=IsGapItem}" Value="True">
                                                    <Setter Property="fa:Content.Icon" Value="SolidArrowsLeftRightToLine" />
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=IsBreak}" Value="False" />
                                                        <Condition Binding="{Binding Path=IsGapItem}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>
                            </Grid>
                        </Border>
                        <Label Grid.Column="1" Content="{Binding TrackingTime}" Style="{DynamicResource DefaultTimeLabel}" />
                        <Label Grid.Column="2" Content="{Binding Hours}" ContentStringFormat=" {0:N2}h" HorizontalContentAlignment="Right" Style="{DynamicResource DefaultTimeLabel}" />
                        <potato:DSButton Grid.Column="3" fa:Content.Icon="SolidGlobe" Padding="5,0,5,0" Style="{DynamicResource TransparentAccentButton}" Visibility="Collapsed" x:Name="btnBrowser"
                                Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type potato:DSWindow}}, Path=DataContext.OpenJiraIssueCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}" />
                        <potato:DSButton Grid.Column="4" fa:Content.Icon="SolidTrash" Padding="5,0,5,0" Style="{DynamicResource TransparentAccentErrorButton}" Visibility="Collapsed" x:Name="btnDelete"
                                Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type potato:DSWindow}}, Path=DataContext.TrackTimeDeleteCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}" />
                    </Grid>
                    <DataTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=grdTime, Path=IsMouseOver}" Value="True" />
                                <Condition Binding="{Binding IsGapItem}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="btnDelete" Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=grdTime, Path=IsMouseOver}" Value="True" />
                                <Condition Binding="{Binding IsJiraTicket}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="btnBrowser" Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" Margin="5,0,5,5">
                <potato:DSButton Style="{DynamicResource TransparentAccentButton}" fa:Content.Icon="SolidGear" FontSize="20"
                                 Padding="0,0,0,0" Margin="0,0,2,0" Width="40" Command="{Binding OpenUserSettingsCommand}" />
                <potato:DSButton Style="{DynamicResource TransparentAccentButton}" fa:Content.Icon="SolidChartArea" FontSize="20"
                                 Padding="0,0,0,0" Width="40" Command="{Binding OpenTimeStatisticsCommand}" />
            </StackPanel>
            <StackPanel Grid.Column="1" Margin="10,7,10,0">
                <Separator Background="{DynamicResource BackgroundC}" Width="265" HorizontalAlignment="Right" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="105" />
                        <ColumnDefinition Width="55" />
                        <ColumnDefinition Width="100" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="1" Content="{Binding TotalWeekHoursDisplay}" Foreground="{DynamicResource ForegroundA}" />
                    <Label Grid.Column="2" Content="{x:Static language:SpeedTime.times_totals_title}" HorizontalContentAlignment="Right" />
                    <Label Grid.Column="3" Content="{Binding TotalHours, TargetNullValue=''}" HorizontalContentAlignment="Right" />
                </Grid>
            </StackPanel>
        </Grid>
    </Grid>
</potato:DSWindow>
