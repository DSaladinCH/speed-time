// <auto-generated />
using System;
using DSaladin.SpeedTime;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DSaladin.SpeedTime.Migrations
{
    [DbContext(typeof(TimeTrackerContext))]
    [Migration("20230817204959_InitialDatabase")]
    partial class InitialDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("DSaladin.SpeedTime.Model.TrackTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBreak")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TrackingStarted")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TrackingStopped")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TrackedTimes");
                });
#pragma warning restore 612, 618
        }
    }
}
